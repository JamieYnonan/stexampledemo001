name: Deploy

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy resources?'
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.ref_name }}

jobs:

  terraform-version:
    runs-on: ubuntu-latest
    outputs:
      terraform-version: ${{ steps.terraform-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform version
        id: terraform-version
        run: |
          version=$(grep -oP 'required_version\s*=\s*"\K[^"]+' terraform.tf)
          echo "version=${version}" >> $GITHUB_OUTPUT
  
  apply:
    runs-on: ubuntu-latest
    needs: terraform-version
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ needs.terraform-version.outputs.terraform-version }}

      - name: Terraform Init
        env:
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
        run: |
          terraform init -input=false \
          -backend-config="storage_account_name=${{ vars.TERRAFORM_CONFIG_SA }}" \
          -backend-config="container_name=${{ vars.TERRAFORM_CONFIG_CN }}" \
          -backend-config="resource_group_name=${{ vars.TERRAFORM_CONFIG_RG }}" \
          -backend-config="key=${{ github.repository }}.tfstate"

      - name: Terraform Plan ${{ inputs.destroy == 'true' && 'Destroy' }}
        run: |
          terraform plan $([[ "${{ inputs.destroy }}" == "true" ]] && echo "-destroy") -input=false -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

      - name: Terraform Apply ${{ inputs.destroy == 'true' && 'Destroy' }}
        run: |
          terraform apply -input=false tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
          ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
